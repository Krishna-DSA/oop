// Base class Employee
class Employee {
    String empName, empId, address, mailId, mobileNo;
    double basicPay;

    public Employee(String empName, String empId, String address, String mailId, String mobileNo, double basicPay) {
        this.empName = empName;
        this.empId = empId;
        this.address = address;
        this.mailId = mailId;
        this.mobileNo = mobileNo;
        this.basicPay = basicPay;
    }

    public void displayDetails() {
        System.out.println("Employee Name: " + empName);
        System.out.println("Employee ID: " + empId);
        System.out.println("Address: " + address);
        System.out.println("Mail ID: " + mailId);
        System.out.println("Mobile Number: " + mobileNo);
    }

    public void generatePaySlip() {
        double da = 0.97 * basicPay; // Dearness Allowance
        double hra = 0.10 * basicPay; // House Rent Allowance
        double pf = 0.12 * basicPay; // Provident Fund
        double staffClubFund = 0.001 * basicPay; // Staff Club Fund
        double grossSalary = basicPay + da + hra;
        double netSalary = grossSalary - pf - staffClubFund;

        System.out.println("\n----- Pay Slip -----");
        System.out.println("Basic Pay: " + basicPay);
        System.out.println("Dearness Allowance (97% of BP): " + da);
        System.out.println("House Rent Allowance (10% of BP): " + hra);
        System.out.println("Provident Fund (12% of BP): " + pf);
        System.out.println("Staff Club Fund (0.1% of BP): " + staffClubFund);
        System.out.println("Gross Salary: " + grossSalary);
        System.out.println("Net Salary: " + netSalary);
    }
}

// Programmer class inheriting Employee
class Programmer extends Employee {
    public Programmer(String empName, String empId, String address, String mailId, String mobileNo, double basicPay) {
        super(empName, empId, address, mailId, mobileNo, basicPay);
    }
}

// TeamLead class inheriting Employee
class TeamLead extends Employee {
    public TeamLead(String empName, String empId, String address, String mailId, String mobileNo, double basicPay) {
        super(empName, empId, address, mailId, mobileNo, basicPay);
    }
}

// AssistantProjectManager class inheriting Employee
class AssistantProjectManager extends Employee {
    public AssistantProjectManager(String empName, String empId, String address, String mailId, String mobileNo, double basicPay) {
        super(empName, empId, address, mailId, mobileNo, basicPay);
    }
}

// ProjectManager class inheriting Employee
class ProjectManager extends Employee {
    public ProjectManager(String empName, String empId, String address, String mailId, String mobileNo, double basicPay) {
        super(empName, empId, address, mailId, mobileNo, basicPay);
    }
}

// Main class to demonstrate functionality
public class Main {
    public static void main(String[] args) {
        Programmer programmer = new Programmer("John Doe", "P001", "123 Programmer St", "john.doe@example.com", "9876543210", 35000);
        TeamLead teamLead = new TeamLead("Jane Smith", "T001", "456 TeamLead Ave", "jane.smith@example.com", "8765432109", 45000);
        AssistantProjectManager apm = new AssistantProjectManager("Alice Brown", "A001", "789 Assistant Rd", "alice.brown@example.com", "7654321098", 55000);
        ProjectManager pm = new ProjectManager("Bob White", "M001", "101 Manager Blvd", "bob.white@example.com", "6543210987", 65000);

        // Display details and pay slips
        programmer.displayDetails();
        programmer.generatePaySlip();

        teamLead.displayDetails();
        teamLead.generatePaySlip();

        apm.displayDetails();
        apm.generatePaySlip();

        pm.displayDetails();
        pm.generatePaySlip();
    }
}

